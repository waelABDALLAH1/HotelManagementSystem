@model hotelManagementSystem20.models.users

@{
    ViewBag.Title = "Login";
}

<style>
    .container {
        margin-top: 50px;
    }

    .login-container {
        background-color: aqua;
        border-radius: 10px;
        box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1);
        padding: 50px;
    }

    .login-title {
        text-align: center;
        color: #333;
        margin-bottom: 30px;
    }

    .form-group {
        text-align: center;
    }

    .control-label {
        text-align: right;
    }

    .login-button {
        margin-top: 30px;
        text-align: center;
    }

    .back-link {
        text-align: center;
        margin-top: 20px;
    }

    .form-control {
        border-radius: 20px;
        font-size: 16px;
    }

    .title {
        font-size: 30px;
        color: black;
        text-align: center;
        margin-bottom: 30px;
    }

    .btn-login {
        border-radius: 20px;
        font-size: 18px;
        background-color: white;
        border-color: black;
        width: 200px;
        height: 40px;
    }

        .btn-login:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

    .validation-summary-errors {
        color: red;
    }
</style>

<div class="title">
    <h1>Hotel Management System</h1>
</div>

<div class="container">
    <div class="row">
        <div class="col-md-6 col-md-offset-3">
            <div class="login-container">
                <h2 class="login-title">Login</h2>
                @using (Html.BeginForm("Index", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control", id = "passwordField" })
                            <button type="button" id="togglePassword" class="btn btn-default">Show</button>
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="login-button">
                        <button type="submit" class="btn btn-primary btn-login">Login</button>
                    </div>
                }
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('togglePassword').addEventListener('click', function () {
            var passwordField = document.getElementById('passwordField');
            if (passwordField.type === 'password') {
                passwordField.type = 'text';
                this.textContent = 'Hide';
            } else {
                passwordField.type = 'password';
                this.textContent = 'Show';
            }
        });
    });
</script>
